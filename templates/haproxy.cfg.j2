global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_syslog_enable %}
  log 127.0.0.1 {{ haproxy_syslog_dest }} notice
{% endif %}
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% if ha_proxy_set_ssl_default %}
ssl-default-bind-ciphers {{ ssl_default_bind_ciphers }}
ssl-default-bind-options {{ ssl_default_bind_options }}

ssl-default-server-ciphers {{ ssl_default_server_ciphers }}
ssl-default-server-options {{ ssl_default_server_options }}
{% endif %}
{% if ssl_dh_param_file != '' %}
ssl-dh-param-file {{ ssl_dh_param_file }}
{% endif %}

{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
{% for option in haproxy_defaults_options %}
  option  {{ option }}
{% endfor %}
{% for timeout in haproxy_defaults_timeouts %}
  timeout {{ timeout }}
{% endfor %}
{% if ansible_os_family == 'Debian' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}

{% if haproxy_stats.enable %}
# stats interface for monitoring
listen stats
    bind {{ haproxy_stats.bindip }}:{{ haproxy_stats.port }}
    mode {{ haproxy_stats.mode }}
{% if not haproxy_stats.log %}
    no log
{% endif %}
    stats {{ 'enable' if haproxy_stats.enable else 'disable' }}
    stats uri {{ haproxy_stats.uri | default('/stats') }}
    stats realm {{ haproxy_stats.realm }}
    stats auth {{ haproxy_stats.auth }}
    stats refresh {{ haproxy_stats.refresh | default('10s')}}
    stats admin {{ haproxy_stats.admin }}
{% endif %}




{% for front in haproxy_frontends %}
frontend {{ front.name }}
    bind {{ front.address }} {{ front.bind_params | join(' ') |default('') }}
{% for addr in (front.extra_addresses | default([])) %}
    bind {{ addr }} {{ front.extra_bind_params | join(' ') | default('') }}
{% endfor %}
    mode {{ front.mode | default('http') }}

  ### Header manipulation ###

    http-request  set-header          X-Forwarded-For   %[src]
    reqadd        X-Forwarded-Proto:\ https             if { ssl_fc }
    option        forwardfor          header            Proxy-ip

  {% if front.setsecurecookies is defined and front.setsecurecookies %}
  rspirep       ^(set-cookie:.*) \1;\ Secure                    if { ssl_fc }
  {% endif %}
  {% if front.set_hsts is defined and front.set_hsts %}
  rspadd        Strict-Transport-Security:\ max-age=31536000    if { ssl_fc }
  {% endif %}

  {% for delheader in ha_proxy_headers_delete %}
  rspidel       {{ delheader }}
  {% endfor %}
  {% if ha_proxy_redirect_insecure %}
  {#- could allow for a condition here e.g. if !{ ssl_fc } !is_some_acl -#}
  redirect      scheme              https             if !{ ssl_fc }
  {% endif %}
  {# must be a better way to substitute the scheme than check for the ssl_fc #}
  {% if ha_proxy_redirect_nonwww and not ha_proxy_redirect_nonwww %}
  http-request redirect code 301 location https://www.%[hdr(host)]%[capture.req.uri]  unless { hdr_beg(host) -i www } if { ssl_fc }
  http-request redirect code 301 location http://www.%[hdr(host)]%[capture.req.uri]  unless { hdr_beg(host) -i www } if !{ ssl_fc }
  {% endif %}
  {% if ha_proxy_redirect_www and not ha_proxy_redirect_www %}
  http-request redirect prefix https://%[hdr(host),regsub(^www\.,,i)] code 301 if { hdr_beg(host) -i www. } if { ssl_fc }
  http-request redirect prefix http://%[hdr(host),regsub(^www\.,,i)] code 301 if { hdr_beg(host) -i www. } if !{ ssl_fc }
  {% endif %}

{%  for frontparam in (front.params | default([])) %}
    {{ frontparam }}
{%  endfor %}
    default_backend {{ front.backend }}
{%   for frontopt in (front.options | default([])) %}
    option {{ frontopt }}
{%   endfor %}
{%   if front.timeout_client | default('') | length > 0 %}
    timeout client {{ front.timeout_client }}
{%   endif %}
{%   if haproxy_syslog_enable %}
{%     if (front.mode | default('http')) == 'http' %}
    log 127.0.0.1 {{ haproxy_syslog_dest_http }}
{%     else %}
    log 127.0.0.1 {{ haproxy_syslog_dest_tcp }}
{%     endif %}
{%   endif %}
{% endfor %}
## ---- Backends ----  ##

{% for back in haproxy_backends %}
backend {{ back.name }}
    mode {{ back.mode | default('http') }}
{%   if back.balance_method | default('') | length > 0 %}
    balance {{ back.balance_method }}
{%   endif %}
{%   for backopt in (back.options | default([])) %}
    option {{ backopt }}
{%   endfor %}
{%   for backparam in (back.params | default([])) %}
    {{ backparam }}
{%   endfor %}
{%   if back.cookie | default('') | length > 0 %}
    cookie {{ back.cookie }}
{%   endif %}
{%   for backend in back.servers %}
    server {{ backend.name }} {{ backend.address }} {% if back.cookie | default('') | length > 0 %}cookie {{ backend.name }}{% endif %} {% if back.check | default(True) %}check{% endif %} {% if backend.extra_opts | default('') %} {{ backend.extra_opts }} {% endif %}

{%   endfor %}
{%   if back.timeout_connect | default('') | length > 0 %}
    timeout connect {{ back.timeout_connect }}
{%   endif %}
{%   if back.timeout_server | default('') | length > 0 %}
    timeout server {{ back.timeout_server }}
{%   endif %}
{% endfor %}
