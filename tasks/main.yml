---
- name: Ensure HAProxy is installed (Debian).
  become: yes
  apt: name=haproxy state=installed
  when: ansible_os_family == 'Debian'

- name: configure haproxy logrotation
  become: yes
  template:
    backup: no
    dest: /etc/logrotate.d/haproxy
    src: logrotated-haproxy.j2

# TODO: This is still in development- more configuration is needed to prevent
# some haproxy logs going to the console, and to potentially take account of
# other apps using the same syslog facility (probably unlikely)
- name: configure haproxy log file
  become: yes
  template:
    backup: no
    dest: /etc/rsyslog.d/90-haproxy.conf
    src: rsyslogd-haproxy.j2
  when: 'haproxy_syslog_dest | length > 0'
  notify:
  - restart rsyslog

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  become: yes
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Ensure HAProxy is installed (RedHat).
  become: yes
  yum: name=haproxy state=installed
  when: ansible_os_family == 'RedHat'

- name: Configure SELinux to allow all connections
  become: yes
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes
  # selinux_enabled fact is set by
  # https://github.com/openmicroscopy/infrastructure/tree/master/ansible/roles/selinux-utils
  # Since this is an external role we can't assume it's been run
  when: "{{ selinux_enabled | default(False) }}"

- name: Get HAProxy version.
  become: yes
  command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: no

- name: Set HAProxy version.
  set_fact:
    haproxy_version: "{{ '1.5' if '1.5.' in haproxy_version_result.stdout else '1.4' }}"

- name: Copy HAProxy configuration in place.
  become: yes
  template:
    src: "{{ haproxy_cfg_template }}"
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c -q
  notify: restart haproxy

- name: Ensure HAProxy is started and enabled on boot.
  become: yes
  service: name=haproxy state=started enabled=yes
